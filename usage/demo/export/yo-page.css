@charset "UTF-8";
/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/core/reset.scss
 * Css Reset
 * Author: joy.du(飘零雾雨)
 * Edit: 2015.1.18
 * Note: only for mobile
 */
*,
::before,
::after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent; }

html {
  background-color: #fafafa;
  color: #212121;
  font-size: 100px;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none; }

body {
  margin: 0;
  font-size: 14px;
  line-height: 1.5;
  font-family: Helvetica Neue, Helvetica, STHeiTi, sans-serif; }

ul, ol, dl, dd, h1, h2, h3, h4, h5, h6, figure, form, fieldset, legend, input, textarea, button, p, blockquote, th, td, pre, xmp {
  margin: 0;
  padding: 0; }

input, textarea, button, select, pre, tt, code, kbd, samp, optgroup, option {
  line-height: inherit;
  font-family: inherit; }

h1, h2, h3, h4, h5, h6, input, textarea, button, select, small, big {
  font-size: inherit; }

address, cite, dfn, em, i, optgroup, var {
  font-style: normal; }

table {
  border-collapse: collapse;
  border-spacing: 0;
  table-layout: fixed;
  text-align: left; }

caption, th {
  text-align: inherit; }

ul, ol, menu {
  list-style: none; }

fieldset, img {
  border: 0; }

img {
  vertical-align: top; }

article, aside, details, figcaption, figure, footer, header, main, menu, nav, section, summary {
  display: block; }

audio, canvas, video {
  display: inline-block; }

blockquote:before, blockquote:after, q:before, q:after {
  content: "\0020"; }

textarea, pre {
  overflow: auto; }

textarea {
  resize: vertical; }

textarea, input, button, a {
  outline: 0; }

textarea, input, button {
  color: inherit; }
  textarea:disabled, input:disabled, button:disabled {
    opacity: 1; }

button::-moz-focus-inner, input::-moz-focus-inner {
  padding: 0;
  border: 0; }

input[type="button"], input[type="submit"], input[type="reset"], input[type="file"]::-webkit-file-upload-button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none; }

mark {
  background-color: transparent; }

a, ins, s, u, del {
  text-decoration: none; }

a, img {
  -webkit-touch-callout: none; }

a {
  color: #00afc7; }

.g-clear::after, .g-mod::after {
  display: block;
  overflow: hidden;
  clear: both;
  height: 0;
  content: "\0020"; }

@font-face {
  font-family: fontawesome-webfont;
  src: url(http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.eot);
  src: url(http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.eot?#iefix) format("embedded-opentype"), url(http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.woff) format("woff"), url(http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.ttf) format("truetype"), url(http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.svg#iconfont) format("svg"); }
.yo-ico {
  font-family: fontawesome-webfont !important;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -webkit-text-stroke-width: .1px;
  -moz-osx-font-smoothing: grayscale;
  vertical-align: middle; }

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/layout/classes.scss
 * Global Layout Classes 约定布局方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * document: doc
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method doc
 * @param {String} $name 定义page-name
 * @param {String} $fixed 定义头尾是否固定
 * @param {Length} $hd-gap 定义主体到viewport顶部的距离
 * @param {Length} $ft-gap 定义主体到viewport底部的距离
 */
/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/layout/classes.scss
 * Global Layout Classes 约定布局方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Layout: yo-stacked
 * Author: joy.du(飘零雾雨)
 * Edit: 2015.1.15
 -----------------------
 * @method stacked
 * variables length(2)
 * @param {defailt | String} $name 定义名称
 * @param {defailt | Color} $margin 定义外边距
 */
.yo-stacked {
  display: block;
  margin: 0.2rem 0.1rem; }
  .yo-stacked::after {
    display: block;
    overflow: hidden;
    clear: both;
    height: 0;
    content: "\0020"; }

/**
* document layout
* Author: joy.du(飘零雾雨)
* Time: 2013.10.17
*/
/**
 * module: m-demo
 * Author: joy.du(飘零雾雨)
 * Time: 2013.10.17
 */
.m-demo {
  margin: .1rem; }
  @media screen and (min-width: 800px) {
    .m-demo {
      display: -webkit-box;
      display: -webkit-flex;
      display: flex; } }
  .m-demo .device {
    position: relative;
    width: 3.66rem;
    height: 7.83rem;
    border: .05rem solid #505559;
    border-radius: .55rem;
    background-color: #313538; }
    .m-demo .device::before, .m-demo .device::after {
      position: absolute;
      left: 50%;
      -webkit-transform: translate(-50%);
      -moz-transform: translate(-50%);
      transform: translate(-50%);
      content: "\0020"; }
    .m-demo .device::before {
      top: .58rem;
      width: .68rem;
      height: .08rem;
      border-radius: 4px;
      background-color: #3e4243; }
    .m-demo .device::after {
      bottom: .18rem;
      width: 0.65rem;
      height: 0.65rem;
      border: .05rem solid #3e4243;
      border-radius: 50%; }
    .m-demo .device .stage {
      top: .99rem;
      left: .18rem;
      width: 3.20rem;
      height: 5.68rem;
      background-color: #fff; }
      .m-demo .device .stage, .m-demo .device .stage::before {
        position: absolute; }
      .m-demo .device .stage::before {
        top: -.68rem;
        left: 50%;
        -webkit-transform: translate(-50%);
        -moz-transform: translate(-50%);
        transform: translate(-50%);
        width: 0.1rem;
        height: 0.1rem;
        border-radius: 50%;
        background-color: #3e4243;
        box-shadow: -.5rem .26rem #3e4243;
        content: "\0020"; }
  .m-demo .code {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    display: block;
    width: 100%;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    -webkit-user-select: text;
    -moz-user-select: text;
    user-select: text;
    margin: .1rem;
    padding: .1rem;
    border-left: .04rem solid #D7DBE4;
    background-color: #F0F3F8;
    font-family: Monaco, Menlo, Consolas, "Courier New", monospace; }
    .m-demo .code h3 {
      margin-top: .1rem; }

/**
 * module: m-code
 * Author: joy.du(飘零雾雨)
 * Time: 2013.10.17
 */
.m-code {
  margin: 10px;
  padding: 10px;
  border-radius: 5px;
  background: #272822;
  color: #51bbe1;
  font-size: 20px; }
  .m-code .method {
    color: #93de08; }
  .m-code .bracket,
  .m-code .colon {
    padding-right: 5px;
    color: #fff; }
  .m-code mark {
    background: none;
    color: #ccc;
    font-size: 16px; }

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/core/reset.scss
 * Css Reset
 * Author: joy.du(飘零雾雨)
 * Edit: 2015.1.18
 * Note: only for mobile
 */
*,
::before,
::after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent; }

html {
  background-color: #fafafa;
  color: #212121;
  font-size: 100px;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none; }

body {
  margin: 0;
  font-size: 14px;
  line-height: 1.5;
  font-family: Helvetica Neue, Helvetica, STHeiTi, sans-serif; }

ul, ol, dl, dd, h1, h2, h3, h4, h5, h6, figure, form, fieldset, legend, input, textarea, button, p, blockquote, th, td, pre, xmp {
  margin: 0;
  padding: 0; }

input, textarea, button, select, pre, tt, code, kbd, samp, optgroup, option {
  line-height: inherit;
  font-family: inherit; }

h1, h2, h3, h4, h5, h6, input, textarea, button, select, small, big {
  font-size: inherit; }

address, cite, dfn, em, i, optgroup, var {
  font-style: normal; }

table {
  border-collapse: collapse;
  border-spacing: 0;
  table-layout: fixed;
  text-align: left; }

caption, th {
  text-align: inherit; }

ul, ol, menu {
  list-style: none; }

fieldset, img {
  border: 0; }

img {
  vertical-align: top; }

article, aside, details, figcaption, figure, footer, header, main, menu, nav, section, summary {
  display: block; }

audio, canvas, video {
  display: inline-block; }

blockquote:before, blockquote:after, q:before, q:after {
  content: "\0020"; }

textarea, pre {
  overflow: auto; }

textarea {
  resize: vertical; }

textarea, input, button, a {
  outline: 0; }

textarea, input, button {
  color: inherit; }
  textarea:disabled, input:disabled, button:disabled {
    opacity: 1; }

button::-moz-focus-inner, input::-moz-focus-inner {
  padding: 0;
  border: 0; }

input[type="button"], input[type="submit"], input[type="reset"], input[type="file"]::-webkit-file-upload-button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none; }

mark {
  background-color: transparent; }

a, ins, s, u, del {
  text-decoration: none; }

a, img {
  -webkit-touch-callout: none; }

a {
  color: #00afc7; }

.g-clear::after, .g-mod::after {
  display: block;
  overflow: hidden;
  clear: both;
  height: 0;
  content: "\0020"; }

@font-face {
  font-family: fontawesome-webfont;
  src: url(http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.eot);
  src: url(http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.eot?#iefix) format("embedded-opentype"), url(http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.woff) format("woff"), url(http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.ttf) format("truetype"), url(http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.svg#iconfont) format("svg"); }
.yo-ico {
  font-family: fontawesome-webfont !important;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -webkit-text-stroke-width: .1px;
  -moz-osx-font-smoothing: grayscale;
  vertical-align: middle; }

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/layout/classes.scss
 * Global Layout Classes 约定布局方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * document: doc
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method doc
 * @param {String} $name 定义page-name
 * @param {String} $fixed 定义头尾是否固定
 * @param {Length} $hd-gap 定义主体到viewport顶部的距离
 * @param {Length} $ft-gap 定义主体到viewport底部的距离
 */
/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/layout/classes.scss
 * Global Layout Classes 约定布局方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Layout: yo-stacked
 * Author: joy.du(飘零雾雨)
 * Edit: 2015.1.15
 -----------------------
 * @method stacked
 * variables length(2)
 * @param {defailt | String} $name 定义名称
 * @param {defailt | Color} $margin 定义外边距
 */
.yo-stacked {
  display: block;
  margin: 0.2rem 0.1rem; }
  .yo-stacked::after {
    display: block;
    overflow: hidden;
    clear: both;
    height: 0;
    content: "\0020"; }

/**
* document layout
* Author: joy.du(飘零雾雨)
* Time: 2013.10.17
*/
/**
 * module: m-demo
 * Author: joy.du(飘零雾雨)
 * Time: 2013.10.17
 */
.m-demo {
  margin: .1rem; }
  @media screen and (min-width: 800px) {
    .m-demo {
      display: -webkit-box;
      display: -webkit-flex;
      display: flex; } }
  .m-demo .device {
    position: relative;
    width: 3.66rem;
    height: 7.83rem;
    border: .05rem solid #505559;
    border-radius: .55rem;
    background-color: #313538; }
    .m-demo .device::before, .m-demo .device::after {
      position: absolute;
      left: 50%;
      -webkit-transform: translate(-50%);
      -moz-transform: translate(-50%);
      transform: translate(-50%);
      content: "\0020"; }
    .m-demo .device::before {
      top: .58rem;
      width: .68rem;
      height: .08rem;
      border-radius: 4px;
      background-color: #3e4243; }
    .m-demo .device::after {
      bottom: .18rem;
      width: 0.65rem;
      height: 0.65rem;
      border: .05rem solid #3e4243;
      border-radius: 50%; }
    .m-demo .device .stage {
      top: .99rem;
      left: .18rem;
      width: 3.20rem;
      height: 5.68rem;
      background-color: #fff; }
      .m-demo .device .stage, .m-demo .device .stage::before {
        position: absolute; }
      .m-demo .device .stage::before {
        top: -.68rem;
        left: 50%;
        -webkit-transform: translate(-50%);
        -moz-transform: translate(-50%);
        transform: translate(-50%);
        width: 0.1rem;
        height: 0.1rem;
        border-radius: 50%;
        background-color: #3e4243;
        box-shadow: -.5rem .26rem #3e4243;
        content: "\0020"; }
  .m-demo .code {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    display: block;
    width: 100%;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    -webkit-user-select: text;
    -moz-user-select: text;
    user-select: text;
    margin: .1rem;
    padding: .1rem;
    border-left: .04rem solid #D7DBE4;
    background-color: #F0F3F8;
    font-family: Monaco, Menlo, Consolas, "Courier New", monospace; }
    .m-demo .code h3 {
      margin-top: .1rem; }

/**
 * module: m-code
 * Author: joy.du(飘零雾雨)
 * Time: 2013.10.17
 */
.m-code {
  margin: 10px;
  padding: 10px;
  border-radius: 5px;
  background: #272822;
  color: #51bbe1;
  font-size: 20px; }
  .m-code .method {
    color: #93de08; }
  .m-code .bracket,
  .m-code .colon {
    padding-right: 5px;
    color: #fff; }
  .m-code mark {
    background: none;
    color: #ccc;
    font-size: 16px; }

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/element/classes.scss
 * element的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * widget: yo-switch
 * Author: joy.du(飘零雾雨)
 * Time: 2014.11.14
 -----------------------
 * @method yo-switch
 * variables length(9)
 * @param {default | String} $name 定义switch名称
 * @param {default | Color} $checked-bordercolor 定义switch激活边框色
 * @param {default | Color} $checked-bgcolor 定义switch激活背景色
 * @param {default | Color} $bordercolor 定义switch边框色
 * @param {default | Color} $bgcolor 定义switch背景色
 * @param {default | Color} $ball-color 定义switch滑块色
 * @param {default | Color} $disabled-bordercolor 定义switch禁用边框色
 * @param {default | Color} $disabled-bgcolor 定义switch禁用背景色
 * @param {default | Color} $disabled-ball-color 定义switch禁用滑块色
 */
.yo-switch[type="checkbox"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  position: relative;
  width: .6rem;
  height: .32rem;
  margin: 0;
  cursor: pointer;
  border: 0.02rem solid #ddd;
  border-radius: .16rem;
  background-color: #fafafa;
  vertical-align: middle;
  -webkit-transition: -webkit-border-color 0.1s ease-out, -webkit-background-color 0.1s ease-out;
  -moz-transition: -moz-border-color 0.1s ease-out, -moz-background-color 0.1s ease-out;
  transition: border-color 0.1s ease-out, background-color 0.1s ease-out; }
  .yo-switch[type="checkbox"]::before {
    position: absolute;
    top: 0;
    left: 0;
    content: "\0020";
    width: 0.28rem;
    height: 0.28rem;
    border-radius: 50%;
    background-color: #fff;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    -webkit-transition: -webkit-transform 0.1s ease-out;
    -moz-transition: -moz-transform 0.1s ease-out;
    transition: transform 0.1s ease-out;
    -webkit-transform: translate(0, 0) translatez(0);
    -moz-transform: translate(0, 0) translatez(0);
    transform: translate(0, 0) translatez(0); }
  .yo-switch[type="checkbox"]:active, .yo-switch[type="checkbox"]:focus {
    outline: none; }
  .yo-switch[type="checkbox"]:checked {
    border-color: #4bd763;
    background-color: #4bd763; }
    .yo-switch[type="checkbox"]:checked::before {
      -webkit-transform: translate(100%, 0) translatez(0);
      -moz-transform: translate(100%, 0) translatez(0);
      transform: translate(100%, 0) translatez(0); }
  .yo-switch[type="checkbox"]:disabled, .yo-switch[type="checkbox"]:disabled:checked {
    border-color: #dfdfdf;
    background-color: #dfdfdf; }
  .yo-switch[type="checkbox"]:disabled::before {
    background-color: #efefef; }

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/fragment/classes.scss
 * fragment的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Widget: yo-header
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-header
 * variables length(9)
 * @param {default | String} $name 定义yo-header名称
 * @param {default | Length} $height 定义yo-header高度
 * @param {default | Length} $item-width 定义yo-header两侧子项宽度
 * @param {default | Length} $item-space 定义yo-header两侧子项离边界的间隙
 * @param {default | Color} $bgcolor 定义yo-header背景色
 * @param {default | Color} $bordercolor 定义yo-header边框色
 * @param {default | Color} $color 定义yo-header文本色
 * @param {default | Length} $font-size 定义yo-header文本大小
 * @param {default | Length} $item-font-size 定义yo-header两侧的子项文本大小
 */
.yo-header {
  position: relative;
  overflow: hidden;
  height: 0.44rem;
  line-height: 0.44rem;
  border-bottom: 1px solid #ddd;
  background-color: #fff;
  font-size: 0.16rem;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  text-align: center; }
  .yo-header > .title {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    margin: 0 0.6rem; }
  .yo-header > .regret,
  .yo-header > .affirm {
    position: absolute;
    top: 0;
    width: 0.6rem;
    font-size: 0.14rem;
    color: #00afc7;
    cursor: pointer; }
    .yo-header > .regret:active,
    .yo-header > .affirm:active {
      opacity: .5; }
  .yo-header > .regret {
    left: 0;
    padding-left: 0.15rem;
    text-align: left; }
  .yo-header > .affirm {
    right: 0;
    padding-right: 0.15rem;
    text-align: right; }

/**
 * Fragment扩展: yo-header-normal, yo-header-positive
 * Author: joy.du(飘零雾雨)
 * Time: 2015.1.16
 */
.yo-header-normal {
  background-color: #fafafa; }

.yo-header-positive {
  border-color: #145fd7;
  background-color: #4a87ee;
  color: #fff; }

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/fragment/classes.scss
 * fragment的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Fragment: yo-list
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-list
 * variables length(10)
 * @param {default|String} $name 定义list名称
 * @param {default|Length} $margin 定义list外边距
 * @param {default|Boole} $is-outline 定义list是否需要轮廓（即外边框）
 * @param {default|Length} $radius 定义list圆角
 * @param {default|Color} $bordercolor 定义list边框色
 * @param {default|Length} $item-padding 定义list项的内补白
 * @param {default|Length} $label-padding 定义list分组标题内补白
 * @param {default|Color} $label-bgcolor 定义list分组标题背景色
 * @param {default|Color} $active-bgcolor 定义list点击反馈背景色
 * @param {default|Color} $on-bgcolor 定义list选中背景色
 */
.yo-list {
  overflow: hidden;
  background-color: #fff;
  color: #ddd; }
  .yo-list > .label,
  .yo-list > .item {
    border-bottom: 0.01rem solid #ddd;
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    -webkit-box-align: center;
    -webkit-align-items: center;
    align-items: center; }
    .yo-list > .label > .mark:not(:last-child),
    .yo-list > .label > .yo-ico:not(:last-child),
    .yo-list > .item > .mark:not(:last-child),
    .yo-list > .item > .yo-ico:not(:last-child) {
      margin-right: .1rem; }
    .yo-list > .label > .flex,
    .yo-list > .item > .flex {
      -webkit-box-flex: 1;
      -webkit-flex: 1;
      flex: 1;
      display: block;
      width: 100%; }
    .yo-list > .label > .mark,
    .yo-list > .label > .yo-ico,
    .yo-list > .label > .col,
    .yo-list > .label > .flex,
    .yo-list > .item > .mark,
    .yo-list > .item > .yo-ico,
    .yo-list > .item > .col,
    .yo-list > .item > .flex {
      display: block; }
    .yo-list > .label.tr,
    .yo-list > .item.tr {
      padding: 0; }
  .yo-list > .label {
    padding: 0.03rem 0.1rem;
    background-color: #fafafa;
    color: #9e9e9e; }
    .yo-list > .label > .col {
      padding: 0.03rem 0.1rem; }
  .yo-list > .item {
    padding: 0.11rem;
    color: #212121; }
    .yo-list > .item-stacked {
      display: block; }
      .yo-list > .item-stacked > .mark {
        padding-bottom: 5px; }
    .yo-list > .item-input > .input,
    .yo-list > .item-input > .yo-input {
      height: auto;
      padding: 0;
      border: 0;
      width: 100%; }
    .yo-list > .item-input, .yo-list > .item-active, .yo-list > .item-on, .yo-list > .item-light {
      cursor: pointer; }
    .yo-list > .item.item-active:active, .yo-list > .item.item-light {
      background-color: #f8f8f8; }
    .yo-list > .item > .col {
      padding: 0.11rem; }

/**
 * Fragment扩展: 嵌入式的 yo-list
 * Author: joy.du(飘零雾雨)
 * Time: 2015.1.16
 */
.yo-list-inset {
  margin: 0.2rem 0.1rem;
  border-radius: 0.02rem;
  border-width: .01rem .01rem 0 .01rem;
  border-style: solid; }

/**
 * list演示页面
 * Author: joy.du(飘零雾雨)
 * Time: 2014.4.1
 */
.yo-list .mark img {
  width: 80px;
  height: 50px; }

/**
 * yo-toolbar演示页面
 * Author: joy.du(飘零雾雨)
 * Time: 2014.9.18
 */
.gu-pagebox {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden; }
  .gu-pagebox .gu-page {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    overflow: hidden;
    visibility: hidden;
    -webkit-transform: translate3d(0, 0, 0);
    -moz-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
    -webkit-backface-visibility: hidden;
    -moz-backface-visibility: hidden;
    backface-visibility: hidden;
    -webkit-transform-style: preserve-3d;
    -moz-transform-style: preserve-3d;
    transform-style: preserve-3d; }
    .gu-pagebox .gu-page.current {
      visibility: visible;
      z-index: 1; }
  .gu-pagebox .gu-page-1 {
    background: #0ac2d2; }
  .gu-pagebox .gu-page-2 {
    background: #7bb7fa; }
  .gu-pagebox .gu-page-3 {
    background: #60d7a9; }
  .gu-pagebox .gu-page-4 {
    background: #fdc162; }
  .gu-pagebox .gu-page-5 {
    background: #fd6a62; }
  .gu-pagebox .gu-page-6 {
    background: #f68dbb; }
  .gu-pagebox .con {
    font-family: Lato, Calibri, Arial, sans-serif;
    z-index: 2;
    position: absolute;
    top: 50%;
    left: 50%;
    width: 280px;
    height: 329px;
    margin-top: -164.5px;
    margin-left: -140px; }
    .gu-pagebox .con > h1 {
      font-size: 64px;
      word-wrap: nowrap;
      word-spacing: nowrap;
      color: rgba(255, 255, 255, 0.6); }
    .gu-pagebox .con > h2 {
      color: rgba(0, 0, 0, 0.2);
      font-size: 30px;
      text-transform: uppercase; }
    .gu-pagebox .con > p {
      font-size: 36px;
      text-transform: uppercase;
      color: rgba(255, 255, 255, 0.9); }
    .gu-pagebox .con > .gu-btn,
    .gu-pagebox .con select {
      border: none;
      font-size: 13px;
      font-weight: 700;
      text-transform: uppercase;
      margin: 10px 0 10px;
      padding: 0px 15px;
      line-height: 40px;
      height: 40px;
      letter-spacing: 1px;
      width: 70%;
      cursor: pointer;
      display: block;
      font-family: Arial, sans-serif;
      box-shadow: 0 3px 0 rgba(0, 0, 0, 0.1);
      user-select: none;
      background: #fff;
      color: #aaa;
      text-align: center; }
    .gu-pagebox .con select {
      -webkit-appearance: none;
      -moz-appearance: none;
      appearance: none;
      border-radius: 0; }

/* animation delay classes */
.delay100 {
  -webkit-animation-delay: .1s;
  animation-delay: .1s; }

.delay180 {
  -webkit-animation-delay: .180s;
  animation-delay: .180s; }

.delay200 {
  -webkit-animation-delay: .2s;
  animation-delay: .2s; }

.delay300 {
  -webkit-animation-delay: .3s;
  animation-delay: .3s; }

.delay400 {
  -webkit-animation-delay: .4s;
  animation-delay: .4s; }

.delay500 {
  -webkit-animation-delay: .5s;
  animation-delay: .5s; }

.delay700 {
  -webkit-animation-delay: .7s;
  animation-delay: .7s; }

.delay1000 {
  -webkit-animation-delay: 1s;
  animation-delay: 1s; }
